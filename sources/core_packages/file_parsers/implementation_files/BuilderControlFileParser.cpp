//--------------------------------------------------------//
//-------------------- System includes -------------------//
//--------------------------------------------------------//
#include <utility>

//--------------------------------------------------------//
//-------------------- External Library Files ------------//
//--------------------------------------------------------//

//--------------------------------------------------------//
//--------------------- Package includes -----------------//
//--------------------------------------------------------//
#include "BuilderControlFile.h"

namespace ANANSI {

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PUBLIC ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//============================= LIFECYCLE ====================================

BuilderControlFile::BuilderControlFile() :
	myFile_(std::make_shared<ControlFile>())
{
    return;
}

BuilderControlFile::BuilderControlFile( BuilderControlFile && other) :
	myFile_(std::move(other.myFile_))
{
    return;
}		// -----  end of method BuilderControlFile::BuilderControlFile  -----


BuilderControlFile::~BuilderControlFile()
{
    return;
}

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================

BuilderControlFile& BuilderControlFile::operator= ( const BuilderControlFile &other )
{
    if (this != &other)
    {
    	this->myFile_ = other.myFile_;
    }
    return *this;
} // assignment operator

BuilderControlFile& BuilderControlFile::operator=( BuilderControlFile && other )
{
    if (this != &other)
    {
        BuilderFileParser::operator=(std::move(other));
        this->myFile_ = std::move(other.myFile_);
    }
    return *this;
} // assignment-move operator

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PROTECTED ////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//============================= LIFECYCLE ====================================

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PRIVATE //////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
    
//============================= LIFECYCLE ====================================

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================


} // namespace ANANSI
