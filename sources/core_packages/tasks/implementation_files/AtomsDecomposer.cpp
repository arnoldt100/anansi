//--------------------------------------------------------//
//-------------------- System includes -------------------//
//--------------------------------------------------------//
#include <utility>

//--------------------------------------------------------//
//-------------------- External Library Files ------------//
//--------------------------------------------------------//

//--------------------------------------------------------//
//--------------------- Package includes -----------------//
//--------------------------------------------------------//
#include "AtomsDecomposer.h"

namespace ANANSI 
{

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PUBLIC ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//============================= LIFECYCLE ====================================

AtomsDecomposer::AtomsDecomposer() :
    AnansiTask{}
{
    return;
}

AtomsDecomposer::AtomsDecomposer( AtomsDecomposer const & other) :
    AnansiTask{other}
{
    if (this != &other)
    {
        
    }
    return;
}

AtomsDecomposer::AtomsDecomposer( AtomsDecomposer && other) :
    AnansiTask{std::move(other)}
{
    if (this != &other)
    {
        
    }
    return;
}		// -----  end of method AtomsDecomposer::AtomsDecomposer  -----


AtomsDecomposer::~AtomsDecomposer()
{
    return;
}

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================

AtomsDecomposer& AtomsDecomposer::operator= ( const AtomsDecomposer &other )
{
    if (this != &other)
    {
        AnansiTask::operator=(other);
    }
    return *this;
} // assignment operator

AtomsDecomposer& AtomsDecomposer::operator= ( AtomsDecomposer && other )
{
    if (this != &other)
    {
        AnansiTask::operator=(std::move(other));
    }
    return *this;
} // assignment-move operator

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PROTECTED ////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//============================= LIFECYCLE ====================================

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PRIVATE //////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
    
//============================= LIFECYCLE ====================================

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================


}; // ----- End of namespace ANANSI -----
