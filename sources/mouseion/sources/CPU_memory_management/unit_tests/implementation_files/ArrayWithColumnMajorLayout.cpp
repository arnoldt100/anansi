/*
 * =====================================================================================
 *
 *       Filename:  ArrayWithColumnMajorLayout.cpp
 *
 *    Description: A boost fixture class to create arrays with 
 *                 column major layout.
 *
 *         Author:  Arnold N. Tharrington (), arnoldt@ornl.gov
 *   Organization:  ORNL-National Center of Computational Sciences
 *
 * =====================================================================================
 */

#include "ArrayWithColumnMajorLayout.h"

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PUBLIC ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//============================= LIFECYCLE ====================================

ArrayWithColumnMajorLayout::ArrayWithColumnMajorLayout() :
    _rowSize(13),
    _columnSize(17),
    _array_ptr(nullptr)
{
    std::size_t const number_of_elements = (this->_rowSize)*(this->_columnSize);
    this->_array_ptr = new int [number_of_elements];
    std::size_t disp=0;
    for (std::size_t jp=0; jp < this->_columnSize; ++jp )
    {
        for (std::size_t ip=0; ip < this->_rowSize; ++ip)
        {
            ++disp;
        }
    }
    return;
}

ArrayWithColumnMajorLayout::~ArrayWithColumnMajorLayout()
{
    if (this->_array_ptr != nullptr)
    {
        delete [] this->_array_ptr;
    }
    return;
}

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PROTECTED ////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//============================= LIFECYCLE ====================================

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PRIVATE //////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
    
//============================= LIFECYCLE ====================================

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================


