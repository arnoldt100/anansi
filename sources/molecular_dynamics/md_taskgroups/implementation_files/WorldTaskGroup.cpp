//--------------------------------------------------------//
//-------------------- System includes -------------------//
//--------------------------------------------------------//
#include <iostream>
#include <memory>

//--------------------------------------------------------//
//-------------------- External Library Files ------------//
//--------------------------------------------------------//

//--------------------------------------------------------//
//--------------------- Package includes -----------------//
//--------------------------------------------------------//
#include "WorldTaskGroup.h"

namespace ANANSI {

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PUBLIC ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//============================= LIFECYCLE ====================================

WorldTaskGroup::WorldTaskGroup() :
   TaskGroup() 
{
    return;
}


WorldTaskGroup::WorldTaskGroup( WorldTaskGroup && other) :
    TaskGroup(std::move(other))
{
    if (this != &other)
    {
        
    }
    return;
}		// -----  end of method WorldTaskGroup::WorldTaskGroup  -----


WorldTaskGroup::~WorldTaskGroup()
{
    return;
}

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================
void WorldTaskGroup::addCommandLineArguments()
{
    return;
}

//============================= OPERATORS ====================================

WorldTaskGroup& WorldTaskGroup::operator= ( WorldTaskGroup && other )
{
    if (this != &other)
    {
        TaskGroup::operator=(std::move(other));
    }
    return *this;
} // assignment-move operator

//============================= STATIC METHODS ===============================
TaskGroup* WorldTaskGroup::create()
{
    return new WorldTaskGroup;
}

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PROTECTED ////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//============================= LIFECYCLE ====================================

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PRIVATE //////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
    
//============================= LIFECYCLE ====================================

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================
void WorldTaskGroup::addCommunicator_()
{
    return;
}

void WorldTaskGroup::addLogger_()
{
    return;
}


//============================= OPERATORS ====================================


} // namespace ANANSI
