//--------------------------------------------------------//
//-------------------- System includes -------------------//
//--------------------------------------------------------//

//--------------------------------------------------------//
//-------------------- External Library Files ------------//
//--------------------------------------------------------//

//--------------------------------------------------------//
//--------------------- Package includes -----------------//
//--------------------------------------------------------//
#include "MPIEnvTask.h"

namespace ANANSI {

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PUBLIC ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//============================= LIFECYCLE ====================================

MPIEnvTask::MPIEnvTask() :
    InterProcessCommEnv()
{
    return;
}

MPIEnvTask::MPIEnvTask( MPIEnvTask const & other) :
   InterProcessCommEnv(other) 
{
    if (this != &other)
    {
        
    }
    return;
}

MPIEnvTask::MPIEnvTask( MPIEnvTask && other) : 
    InterProcessCommEnv(std::move(other))
{
    if (this != &other)
    {
    }
    return;
}		// -----  end of method MPIEnvTask::MPIEnvTask  -----


MPIEnvTask::~MPIEnvTask()
{
    return;
}

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================

MPIEnvTask& MPIEnvTask::operator=( const MPIEnvTask &other )
{
    if (this != &other)
    {
        InterProcessCommEnv::operator=(other);
    }
    return *this;
} // assignment operator

MPIEnvTask& MPIEnvTask::operator=( MPIEnvTask && other )
{
    if (this != &other)
    {
        InterProcessCommEnv::operator=(std::move(other));
    }
    return *this;
} // assignment-move operator

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PROTECTED ////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//============================= LIFECYCLE ====================================

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PRIVATE //////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
    
//============================= LIFECYCLE ====================================

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================
void MPIEnvTask::enable_()
{
    return;
}

void MPIEnvTask::disable_()
{
    return;
}

//============================= OPERATORS ====================================


} // namespace ANANSI
