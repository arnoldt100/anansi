//--------------------------------------------------------//
//-------------------- System includes -------------------//
//--------------------------------------------------------//

//--------------------------------------------------------//
//-------------------- External Library Files ------------//
//--------------------------------------------------------//

//--------------------------------------------------------//
//--------------------- Package includes -----------------//
//--------------------------------------------------------//
#include "GenericMDTaskContainer.h"

namespace ANANSI {

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PUBLIC ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//============================= LIFECYCLE ====================================

GenericMDTaskContainer::GenericMDTaskContainer() :
    task_(nullptr) 
{
    return;
}

GenericMDTaskContainer::GenericMDTaskContainer(std::shared_ptr<AnansiTask> my_task) :
    task_(my_task) 
{
    return;
}

GenericMDTaskContainer::GenericMDTaskContainer( GenericMDTaskContainer && other) :
    task_(std::move(other.task_))
{
    if (this != &other)
    {
    }
    return;
}		// -----  end of method GenericMDTaskContainer::GenericMDTaskContainer  -----


GenericMDTaskContainer::~GenericMDTaskContainer()
{
    return;
}

//============================= ACCESSORS ====================================
bool GenericMDTaskContainer::compareTaskLabel() const
{
    return false;
}

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================

GenericMDTaskContainer& GenericMDTaskContainer::operator= ( GenericMDTaskContainer && other )
{
    if (this != &other)
    {
        this->task_ = std::move(other.task_);
    }
    return *this;
} // assignment-move operator

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PROTECTED ////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//============================= LIFECYCLE ====================================

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================

//////////////////////////////////////////////////////////////////////////////
/////////////////////////////// PRIVATE //////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
    
//============================= LIFECYCLE ====================================

//============================= ACCESSORS ====================================

//============================= MUTATORS =====================================

//============================= OPERATORS ====================================


} // namespace ANANSI
